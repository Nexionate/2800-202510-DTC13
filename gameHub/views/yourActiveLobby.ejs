<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
  <title>Your Active Lobbies</title>
  <style>
    @keyframes kenburns {
            0% {
                transform: scale(1) translate(0, 0);
                opacity: 0;
            }

            10% {
                opacity: 1;
            }

            90% {
                opacity: 1;
            }

            100% {
                transform: scale(1.1) translate(-3%, -3%);
                opacity: 0;
            }
        }

        .kenburns-image {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-size: cover;
            background-position: center;
            animation: kenburns 30s ease-in-out infinite;
            opacity: 0;
            filter: brightness(1.3);
            z-index: 0;
        }

        .kenburns-image:nth-child(1) {
            animation-delay: 0s;
        }

        .kenburns-image:nth-child(2) {
            animation-delay: 3s;
        }

        .kenburns-image:nth-child(3) {
            animation-delay: 6s;
        }

        .kenburns-image:nth-child(4) {
            animation-delay: 9s;
        }

        .kenburns-image:nth-child(5) {
            animation-delay: 12s;
        }

        .kenburns-image:nth-child(6) {
            animation-delay: 15s;
        }

        .kenburns-image:nth-child(7) {
            animation-delay: 18s;
        }

        .kenburns-image:nth-child(8) {
            animation-delay: 21s;
        }

        .kenburns-image:nth-child(9) {
            animation-delay: 24s;
        }

        .kenburns-image:nth-child(10) {
            animation-delay: 27s;
        }
  </style>
</head>

<body class="relative bg-gray-100 font-sans text-gray-800">

  <!-- Ken Burns Background -->
  <div id="kenburns-bg-wrapper" class="fixed inset-0 z-0 overflow-hidden"></div>
  <!-- Dark overlay to soften background brightness -->
  <div class="fixed inset-0 bg-black/70 z-10 pointer-events-none"></div>

  <div class="relative z-20">
    <!-- Navigation bar -->
    <div class="flex flex-row justify-center pt-2 pb-2 text-md text-white space-x-5 bg-[#000000] relative z-10">
      <button class="px-3" onclick="window.location.href='/home'">
        Home
      </button>
      <button class="px-3" onclick="window.location.href='/profile'">
        Profile
      </button>
      <button class="px-3" onclick="window.location.href='/help'">
        Help
      </button>
      <form class="px-3" action="/logout">
        <input type="submit" value="Logout" />
      </form>
    </div>
  </div>

  <div class="relative z-10 p-6">
    <h1 class="text-3xl text-white font-bold text-center mb-6">Your Active Lobbies</h1>

    <div class="text-center mb-4">
      <button class="bg-[#0a0e1a] hover:bg-gray-400 border border-white text-white px-4 py-2 rounded"
        onclick="window.location.href='/home'">
        Back to Home
      </button>
    </div>

    <ul id="lobby-list" class="space-y-4 max-w-2xl mx-auto">
      <!-- Lobby entries will be inserted here -->
    </ul>
  </div>

  <script>
    fetch('/api/activeLobbies')
      .then(res => res.json())
      .then(lobbies => {
        const list = document.getElementById('lobby-list');
        if (!lobbies.length) {
          list.innerHTML = '<p class="text-center text-white">No active lobbies found.</p>';
        } else {
          lobbies.forEach(lobby => {
            const li = document.createElement('li');
            li.className = "bg-[#0a0e1a] border border-white text-white shadow rounded-lg p-4";

            const currentUsername = '<%= username %>'; // This must be passed into EJS

const playerListHTML = lobby.usersDetailed.map(player => {
  if (player.username === currentUsername) {
    return `
      <li class="ml-4">
        ðŸ‘¤ <input 
          type="text" 
          id="editTagInput" 
          value="${player.displayName}" 
          class="text-white px-1 rounded"
        />
        <button 
          onclick="saveTag()" 
          class="ml-2 px-2 py-1 bg-green-500 text-white rounded hover:bg-green-600"
        >Edit Lobby Tag</button>
      </li>
    `;
  } else {
    return `<li class="ml-4">ðŸ‘¤ ${player.displayName} (${player.username})</li>`;
  }
}).join('');



            li.innerHTML = `
              <h2 class="text-xl font-semibold">${lobby.lobbyName}</h2>
              <p><strong>Game:</strong> ${lobby.gameName}</p>
              <p><strong>Players:</strong> ${lobby.user.length} / ${lobby.numPlayers}</p>
              <p><strong>Tags:</strong> ${lobby.tags ? lobby.tags.join(', ') : 'None'}</p>
              <div class="mt-2">
                <p class="font-semibold">Players in this lobby:</p>
                <ul class="list-disc list-inside">
                  ${playerListHTML}
                </ul>
              </div>
              <button 
                onclick="leaveLobby('${lobby.lobbyId}')" 
                class="mt-4 bg-red-500 hover:bg-red-400 text-white px-3 py-1 rounded"
              >
                Leave Lobby
              </button>
            `;
            list.appendChild(li);
          });
        }
      })
      .catch(err => {
        console.error('Error loading active lobbies:', err);
        document.getElementById('lobby-list').innerHTML = '<p class="text-center text-red-500">Failed to load lobbies.</p>';
      });

    function leaveLobby(lobbyId) {
      fetch(`/leaveLobby/${lobbyId}`, {
        method: "POST"
      })
        .then(res => {
          if (!res.ok) throw new Error("Failed to leave");
          return res.text();
        })
        .then(() => {
          window.location.reload();
        })
        .catch(err => {
          console.error("Error leaving lobby:", err);
          alert("Failed to leave the lobby.");
        });
    }

    const apiKey = 'f61c15c68f3246a3aeebcfa53cdef84f';
    const wrapper = document.getElementById('kenburns-bg-wrapper');

    fetch(`https://api.rawg.io/api/games?key=${apiKey}&tags=multiplayer,co-op&page_size=10&page=7`)
      .then((res) => res.json())
      .then((data) => {
        data.results.forEach((game) => {
          if (game.background_image) {
            const bg = document.createElement('div');
            bg.className = 'kenburns-image';
            bg.style.backgroundImage = `url(${game.background_image})`;
            wrapper.appendChild(bg);
          }
        });
      });

      function saveTag() {
  const newTag = document.getElementById("editTagInput").value;

  fetch('/editDisplayName', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: `displayName=${encodeURIComponent(newTag)}`
  })
    .then(res => {
      if (!res.ok) throw new Error('Failed to save');
      return res.text();
    })
    .then(() => {
      window.location.reload();
    })
    .catch(err => {
      console.error('Error saving tag:', err);
      alert('Failed to save tag.');
    });
}

  </script>
</body>

</html>