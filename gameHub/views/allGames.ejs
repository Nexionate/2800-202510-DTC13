<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    />
    <title>All games</title>
    <style>
      #game-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
        margin: 20px;
      }

      .game-card:hover {
        background-color: #292c31;
      }
      .game-card {
        border: 1px solid #ccc;
        border-radius: 6px;
        overflow: hidden;
        padding: 10px;
        text-align: center;
        background-color: #0a0e1aa3;
        color: white;
        transition: background-color 0.2s ease;
      }

      .game-card img {
        width: 222px;
        height: 125px;
      }

      .game-card img.game-image {
        width: 300px;
        height: 175px;
        object-fit: cover;
        cursor: pointer;
      }

      .pagination {
        text-align: center;
        margin: 20px;
      }

      .pagination button {
        padding-top: 5px;
        padding-bottom: 5px;
        width: 20%;
      }

      @keyframes kenburns {
        0% {
          transform: scale(1) translate(0, 0);
          opacity: 0;
        }

        10% {
          opacity: 1;
        }

        90% {
          opacity: 1;
        }

        100% {
          transform: scale(1.1) translate(-3%, -3%);
          opacity: 0;
        }
      }

      .kenburns-image {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-size: cover;
        background-position: center;
        animation: kenburns 30s ease-in-out infinite;
        opacity: 0;
        filter: brightness(1.3);
        z-index: -10;
      }

      .kenburns-image:nth-child(1) {
        animation-delay: 0s;
      }

      .kenburns-image:nth-child(2) {
        animation-delay: 3s;
      }

      .kenburns-image:nth-child(3) {
        animation-delay: 6s;
      }

      .kenburns-image:nth-child(4) {
        animation-delay: 9s;
      }

      .kenburns-image:nth-child(5) {
        animation-delay: 12s;
      }

      .kenburns-image:nth-child(6) {
        animation-delay: 15s;
      }

      .kenburns-image:nth-child(7) {
        animation-delay: 18s;
      }

      .kenburns-image:nth-child(8) {
        animation-delay: 21s;
      }

      .kenburns-image:nth-child(9) {
        animation-delay: 24s;
      }

      .kenburns-image:nth-child(10) {
        animation-delay: 27s;
      }
    </style>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@3.3.2/dist/tailwind.min.css"
      rel="stylesheet"
    />

    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
  </head>

  <body class="font-sans bg-black text-white">
    <!-- Ken Burns Background -->
    <div
      id="kenburns-bg-wrapper"
      class="fixed inset-0 z-0 overflow-hidden"
    ></div>
    <!-- Dark overlay to soften background brightness -->
    <div class="fixed inset-0 bg-black/70 z-10 pointer-events-none"></div>

    <div class="relative z-20">
      <!-- Navigation bar -->
      <div
        class="flex flex-row justify-center h-10 text-md text-white space-x-5 bg-[#000000] relative z-10"
      >
        <button
          class="px-3 h-full hover:bg-gray-400 transition duration-500 ease-in-out"
          onclick="window.location.href='/home'"
        >
          Home
        </button>
        <button
          class="px-3 h-full hover:bg-gray-400 transition duration-500 ease-in-out"
          onclick="window.location.href='/profile'"
        >
          Profile
        </button>
        <button
          class="px-3 h-full hover:bg-gray-400 transition duration-500 ease-in-out"
          onclick="window.location.href='/help'"
        >
          Help
        </button>
        <button
          class="px-3 h-full hover:bg-gray-400 transition duration-500 ease-in-out"
        >
          <form class="px-3" action="/logout">
            <input type="submit" value="Logout" />
          </form>
        </button>
      </div>
    </div>

    <h1
      class="relative z-20 text-4xl font-bold flex flex-row gap-4 text-white justify-center mx-auto flex-wrap py-4"
    >
      All Games
    </h1>

    <div
      id="sidebar"
      class="relative z-20 px-4 mx-4 bg-black/30 border border-white rounded-lg flex items-center justify-end flex-col md:flex-row gap-4 p-4"
    >
      <div id="search-seaction" class="w-full md:w-[40%]">
        <form action="/search" method="post">
          <svg
            class="absolute left-8 top-[1.4rem] md:left-6 md:top-1/2 md:-translate-y-[10px] w-5 h-5 text-gray-400"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M21 21l-4.35-4.35M17 11a6 6 0 11-12 0 6 6 0 0112 0z"
            ></path>
          </svg>
          <input
            type="text"
            name="search"
            placeholder="Search for games"
            id="searc-bar"
            class="border border-black rounded-full bg-white px-4 py-1 w-full pl-10 text-black focus:ring-3"
          />
        </form>
      </div>
      <div
        id="filter"
        class="w-full flex flex-col items-center justify-center md:flex-row md:w-[70%] gap-5"
      >
        <div class="flex flex-row gap-2">
          <div class="w-auto flex gap-2">
            <label for="genre" class="text-xl">Genre:</label>
            <select
              id="genre"
              class="h-7 border border-white rounded-full text-center text-black bg-white"
            >
              <option value="">All</option>
            </select>
          </div>

          <div class="w-auto flex min-w-[170px] gap-2">
            <label for="ordering" class="text-xl">Sort By:</label>
            <select
              id="ordering"
              class="h-7 border border-white rounded-full text-center text-black bg-white"
            >
              <option value="">Default</option>
              <option value="-rating">Top Rated</option>
              <option value="-released">Newest</option>
              <option value="name">Aâ€“Z</option>
            </select>
          </div>
        </div>

        <button
          id="applyFilters"
          class="border-white border hover:bg-gray-400 bg-[#0a0e1a] rounded-lg py-1 px-2 w-[80%]"
        >
          Apply
        </button>
      </div>
    </div>

    <h1
      class="relative z-20 text-2xl text-white font-bold mb-4 text-center pt-3"
    >
      Results for "<%= filters.name %>"
    </h1>

    <div class="games-list text-white relative z-20" id="game-grid">
      <% if (games.length===0) { %>
      <p>No games found.</p>
      <% } else { %> <% games.forEach(game=> { %>
      <div
        class="game-card tilt-card bg-black/80 rounded-xl shadow-md border border-white overflow-hidden p-4 text-center text-white transform ease-in-out"
      >
        <h2 class="text-lg font-semibold mb-2"><%= game.name %></h2>
        <% if (game.background_image) { %>
        <img
          src="<%= game.background_image %>"
          alt="<%= game.name %>"
          width="300"
          class="rounded object-cover mx-auto"
        />
        <% } else { %>
        <p>No image available.</p>
        <% } %>
      </div>
      <% }); %> <% } %>
    </div>

    <!-- Tilt + Dynamic Shadow Script -->
    <script>
      tailwind.config = {
        theme: {
          extend: {
            fontFamily: {
              oswald: ['Oswald', 'sans-serif'], //oswald (title)
              Fira: ['Fira Sans', 'sans-serif'], //oswald (title)
            },
          },
        },
      };
      document.querySelectorAll('.tilt-card').forEach((card) => {
        card.addEventListener('mousemove', (e) => {
          const rect = card.getBoundingClientRect();
          const x = e.clientX - rect.left;
          const y = e.clientY - rect.top;

          const centerX = rect.width / 2;
          const centerY = rect.height / 2;

          const rotateX = -(y - centerY) / 20;
          const rotateY = (x - centerX) / 20;

          const verticalOffset = Math.abs(y - centerY);
          const shadowY = Math.min(40, verticalOffset / 2);
          const shadowBlur = Math.min(60, verticalOffset * 1.5);

          card.style.transform = `perspective(600px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.01)`;
          card.style.boxShadow = `0 ${shadowY}px ${shadowBlur}px rgba(0, 0, 0, 0.2)`;
        });

        card.addEventListener('mouseleave', () => {
          card.style.transform = '';
          card.style.boxShadow = '';
        });
      });
    </script>

    <div
      class="pagination relative z-20 text-white border-white font-semibold mx-auto"
    >
      <button
        class="relative z-20 bg-[#0a0e1a] hover:bg-gray-400 border rounded-l-full border-r-0 shadow-md transition transform focus:outline-none focus:ring-2 focus:ring-blue-300"
        id="prevPage"
      >
        Prev</button
      ><span
        class="relative z-20 py-[6.3px] pb-[6.5px] bg-[#0a0e1a] shadow-md transition duration-500 ease-in-ou mt-8 transform border border-y-white border-x-0 px-4"
        id="pageNum"
        >Page 1</span
      ><button
        class="relative z-20 bg-[#0a0e1a] hover:bg-gray-400 transition duration-500 ease-in-ou border rounded-r-full border-l-0 shadow-md mt-8 transform focus:outline-none focus:ring-2 focus:ring-blue-300"
        id="nextPage"
      >
        Next
      </button>
    </div>
  </body>
  <script>
      // Embed EJS server-side data into JS variable. DO NOT CHANGE
      const initialGames = <%- JSON.stringify(games) %>;
      const searchName = <%- JSON.stringify(searchName) %>;
      renderGames(initialGames);

    const apiKey = 'f61c15c68f3246a3aeebcfa53cdef84f'; // Replace with your actual RAWG API key
    let currentPage = 1;

    async function loadFilterOptions() {
      const [genresRes, platformsRes, tagsRes] = await Promise.all([
        fetch(`https://api.rawg.io/api/genres?key=${apiKey}`),
      ]);

      const genres = await genresRes.json();

      populateSelect('genre', genres.results);
    }

    function populateSelect(id, items) {
      const select = document.getElementById(id);
      items.forEach((item) => {
        const option = document.createElement('option');
        option.value = item.slug || item.id;
        option.textContent = item.name;
        select.appendChild(option);
      });
    }

      async function fetchGames(page = 1) {
        const genre = document.getElementById('genre').value;
        const ordering = document.getElementById('ordering').value;

        let url = `https://api.rawg.io/api/games?key=${apiKey}&page_size=20&page=${page}&tags=multiplayer,co-op`;

        if (genre) url += `&genres=${genre}`;
        if (ordering) url += `&ordering=${ordering}`;
        if (searchName && searchName != 'All Games') url += `&search=${searchName}`;
        const response = await fetch(url);
        const data = await response.json();
        renderGames(data.results);
        document.getElementById('pageNum').textContent = `Page ${page}`;
      }

      function starRating(rating) {
        const maxStars = 5;
        const fullStars = Math.floor(rating);
        const halfStar = rating % 1 >= 0.5;
        const emptyStars = maxStars - fullStars - (halfStar ? 1 : 0);

        let starHTML = '';

        for (let i = 0; i < fullStars; i++) {
          starHTML += '<i class="fas fa-star" style="color: gold;"></i>';
        }

        if (halfStar) {
          starHTML += '<i class="fas fa-star-half-alt" style="color: gold;"></i>';
        }

        for (let i = 0; i < emptyStars; i++) {
          starHTML += '<i class="far fa-star" style="color: lightgray;"></i>';
        }

        return starHTML;
      }

    function renderGames(games) {
      const grid = document.getElementById('game-grid');
      grid.innerHTML = ''; // Clear current content

      games.forEach((game) => {
        const div = document.createElement('div');
        div.classList.add('game-card');
        div.innerHTML = `
          <a href="/gameDescription/${game.id}">
              <img class="game-image" src="${game.background_image}" alt="${game.name}"/>
              <h2><b>${game.name}</b></h2>
              <h4>Rating ${game.rating}<h4>
              <span>${starRating(game.rating)}</span>
          </a>
      `;
        grid.appendChild(div);
      });
    }

    // Pagination handlers
    document.addEventListener('DOMContentLoaded', () => {
      // Now your JS code can safely interact with the DOM
      document.getElementById('nextPage').addEventListener('click', () => {
        currentPage++;
        fetchGames(currentPage);
      });

      document.getElementById('prevPage').addEventListener('click', () => {
        if (currentPage > 1) {
          currentPage--;
          fetchGames(currentPage);
        }
      });

      // Apply filters and fetch games
      document
        .getElementById('applyFilters')
        .addEventListener('click', () => {
          currentPage = 1; // Reset to page 1 when filters are applied
          fetchGames(currentPage);
        });

      // Initial fetch
      loadFilterOptions();
    });

    const wrapper = document.getElementById('kenburns-bg-wrapper');

    fetch(`https://api.rawg.io/api/games?key=${apiKey}&tags=multiplayer,co-op&page_size=10&page=2`)
        .then((res) => res.json())
        .then((data) => {
          data.results.forEach((game) => {
            if (game.background_image) {
              const bg = document.createElement('div');
              bg.className = 'kenburns-image';
              bg.style.backgroundImage = `url(${game.background_image})`;
              wrapper.appendChild(bg);
            }
          });
        });
  </script>
</html>
